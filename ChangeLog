2015-05-22  Ola Jeppsson  <ola@adapteva.com>

	* test/e-free-resource-leak-test/build.sh: New file
	* test/e-free-resource-leak-test/run.sh: New file
	* test/e-free-resource-leak-test/src/main.c: New file.
	Regression test for epiphany-libs commit:
	"be28d22caf3e09aa5813ec3a946279af2ee5191c"

2015-04-07  Ola Jeppsson  <ola@adapteva.com>

	* scripts/build_and_test_all.sh: Fix typo

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* .travis.yml: New file.
	* README.md: Add travis status image

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* scripts/build_and_test_all.sh: Filter out apps/fft2d when
	cross compilation is detected. It is hard to satisfy library
	requirements.
	Skip repeated tests when cross compilation is detected.
	Pretty printing adjustments.

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* apps/matmul-16/build.sh: Detect cross compilation and pass
	cross compiler to make if so.
	* apps/matmul-64/build.sh: Likewise.
	* apps/matmul-16/host/Debug/makefile: Use $(CC) instead of
	gcc.
	* apps/matmul-16/host/Debug/src/subdir.mk: Likewise.
	* apps/matmul-16/host/Release/makefile: Likewise.
	* apps/matmul-16/host/Release/src/subdir.mk: Likewise.
	* apps/matmul-64/host/Debug/makefile: Likewise.
	* apps/matmul-64/host/Debug/src/subdir.mk: Likewise.
	* apps/matmul-64/host/Release/makefile: Likewise.
	* apps/matmul-64/host/Release/src/subdir.mk: Likewise.

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* test/e-mesh-test/build.sh: Satisfy runtime dependencies.

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* apps/fft2d/run.sh: Add missing Epiphany elf parameter.
	* apps/fft2d/test.sh: Likewise.

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* apps/e-bandwidth-test/build.sh: Don't build srec file
	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c: Use .elf
	instead of srec.
	(int main): Fix segfault.
	(int SRAM_speed): Repeat tests to get more stable results.

2015-04-06  Ola Jeppsson  <ola@adapteva.com>

	* apps/matmul-16/host/src/matmul_host.c: Fix compilation errors.

2015-04-04  Andreas Olofsson  <andreas@adapteva.com>

	* test/e-mesh-test/src/e-task.c (int main): Clarified test

2015-04-04  Andreas Olofsson  <andreas@adapteva.com>

	* test/e-mesh-test/build.sh: Add basic mesh test. New file.
	* test/e-mesh-test/src/e-task.c: New file.
	* test/e-mesh-test/test.sh: New file.

2015-04-04  Andreas Olofsson  <andreas@adapteva.com>

	* apps/eprime/build.sh: Cleanup
	* apps/eprime/src/prime.c (int main): Likewise.
	* apps/matmul-16/run.sh: Likewise.
	* apps/matmul-16/test.sh: Likewise
	* scripts/selftest: Likewise.

2015-04-03  Andreas Olofsson  <andreas@adapteva.com>

	* (all): Cleanup: creating self test script making every test
	print out PASS/FAIL from host. Remove license headers.
	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c (int main):
	(int SRAM_speed):
	(int EPI_speed):
	* apps/e-dump-regs/src/e-dump-regs.c:
	* apps/e-fill-mem/src/e-fill-mem.c (void usage):
	* apps/fft2d/host/src/fft2d_host.c (void get_args):
	* apps/matmul-16/host/src/matmul_host.c (int matmul_go):
	* scripts/LIST.E16:
	* scripts/TestEpiphany.pl:
	* scripts/build_all.sh:
	* scripts/selftest: New file.
	* test/e-extmem-test/src/e-task.c:
	* test/e-loopback-test/src/e-task.c:
	* test/e-main/build.sh: Remove.
	* test/e-main/run.sh: Remove.
	* test/e-main/src/common.h: Remove.
	* test/e-main/src/e-main.c: Remove.
	* test/e-main/src/e-task.c: Remove.
	* test/e-main/test.sh: Remove.
	* test/e-matmul-test/src/e-task.c:
	* test/e-mem-test/src/e-mem-test.c:
	* test/e-read-buf/src/e-read-buf.c:
	* test/e-read-word/src/e-read-word.c:
	* test/e-regfile-test/src/e-regfile-test.c:
	* test/e-reset/src/e-reset.c:
	* test/e-standby-test/src/e-standby-test.c:
	* test/e-test/src/e-test.c (void e_check_test):
	* test/e-write-buf/src/e-write-buf.c:
	* test/e-write-word/src/e-write-word.c:

2015-04-03  Andreas Olofsson  <andreas@adapteva.com>

	* apps/e-dump-regs/src/e-dump-regs.c (int main): Removed
	reset call.

2015-01-29  Ola Jeppsson  <ola@adapteva.com>

	* scripts/build_and_test_all.sh: Disable some tests that might be
	problematic.

2015-01-27  Ola Jeppsson  <ola@adapteva.com>

	* cpu/mutex/src/e_mutex_test.c (int main): Set flag on core0
	to start computation. Update expected clock cycles.
	* cpu/mutex/src/e_mutex_test0.c: Wait on go flag before
	starting.
	* cpu/mutex/src/mutex_test.c: Likewise.

2015-01-26  Ola Jeppsson  <ola@adapteva.com>

	* apps/matmul-16/host/src/matmul_host.c (int main): Also clock
	CPUTIME. Compare this value to monotonic time to detect if the
	system is under high load. If that is the case, and monotonic
	time was too slow, do not indicate failure unless we were
	allocated enough CPU time. Just print a warning.

2015-01-26  Ola Jeppsson  <ola@adapteva.com>

	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c (int
	SRAM_speed): Use clock_gettime() instead gettimeofday() for
	better accuracy.
	* apps/fft2d/host/src/fft2d_host.c (int main): Likewise.
	* apps/fft2d/host/src/fftw.c: Likewise.
	* apps/matmul-16/host/src/matmul_host.c (void
	matmul_strassen): Likewise.
	* apps/matmul-64/host/src/matmul_host.c: Likewise.
	* apps/e-bandwidth-test/build.sh: Link host binary with -lrt.
	* apps/fft2d/build.sh: Likewise.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* scripts/build_and_test_all.sh: Improve testing and output.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* labs/hardware_barrier/src/emain.c (int main): Add
	synchronization point between first E core and host so that
	the host can read out the core iteration counters in a
	race-free manner.
	* labs/hardware_barrier/src/main.c: Likewise.
	* labs/hardware_barrier/src/hwb_isr.s: Remove.
	* labs/hardware_barrier/build.sh: Remove all references to
	hwb_isr.s.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* cpu/mutex/src/mutex_test.c (int main): Update allowed clock
	cycle range for new ESDK. Use exit status to report errors.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* apps/matmul-16/test.sh: Forward program's exit status.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* apps/matmul-16/host/src/matmul_host.c (int main): Return
	with non-zero exit status on detected performance regressions.

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c (int main):
	Return with non-zero exit code on detected errors.
	(int SRAM_speed): Report performance regressions.
	(int EPI_speed): Return error if Epiphany test did not run to
	completion

2015-01-25  Ola Jeppsson  <ola@adapteva.com>

	* softcache/basic_math/Makefile: Fix cross compilation paths.
	* softcache/math_example/Makefile: Likewise.

2015-01-24  Ola Jeppsson  <ola@adapteva.com>

	* dma/dma_slave/src/dma_slave_test.c (int main): Go back to
	wait time before previous commit.

2015-01-24  Ola Jeppsson  <ola@adapteva.com>

	* dma/dma_2d/src/dma_2d_test.c (int main): Fix missing err
	check.
	* dma/dma_slave/src/dma_slave_test.c: Slightly increase wait.

2015-01-24  Ola Jeppsson  <ola@adapteva.com>

	* dma/dma_2d/src/dma_2d_test.c (int main): Indicate error with
	return code.
	* dma/dma_chain/src/dma_chain_test.c: Likewise
	* dma/dma_interrupt/src/dma_int_test.c: Likewise
	* dma/dma_message_read/src/dma_message_a.c: Likewise
	* dma/dma_message_write/src/dma_message_test.c: Likewise
	* dma/dma_slave/src/dma_slave_test.c: Likewise

2015-01-16  Ola Jeppsson  <ola@adapteva.com>

	* labs/mem_protect/src/mpf_isr.s: Remove.
	* labs/mem_protect/src/emain.c (void mpf_isr): Replace above
	assembler page fault handler with C version.
	(int main): Simplify. Do not test stack page.
	* labs/mem_protect/src/main.c: Simplify.
	* labs/mem_protect/build.sh: Don't link with removed assembly
	mpf isr. Use linker script that will place stack in local core
	SRAM.

2015-01-16  Ola Jeppsson  <ola@adapteva.com>

	* labs/hardware_barrier/src/main.c (int main): Exit with
	failure code on detected failure.

2015-01-15  Ola Jeppsson  <ola@adapteva.com>

	* README.md: Add descriptions for missing directories.

2015-01-15  Ola Jeppsson  <ola@adapteva.com>

	* softcache/basic_math/Makefile: Adjustment of paths and cross
	compiling.
	* softcache/math_example/Makefile: Likewise.
	* softcache/basic_math/.gitignore: New file.
	* softcache/basic_math/build.sh: New file.
	* softcache/basic_math/test.sh: New file.
	* softcache/math_example/.gitignore: New file.
	* softcache/math_example/build.sh: New file.
	* softcache/math_example/test.sh: New file.

2015-01-15  Ola Jeppsson  <ola@adapteva.com>

	* softcache/README.md: New file.
	* softcache/basic_math/Makefile: New file.
	* softcache/basic_math/cachemanager.S: New file.
	* softcache/basic_math/e_math_test.c: New file.
	* softcache/basic_math/fast.ldf: New file.
	* softcache/basic_math/fast_cacheman.ldf: New file.
	* softcache/basic_math/math_test.c: New file.
	* softcache/math_example/Makefile: New file.
	* softcache/math_example/cachemanager.S: New file.
	* softcache/math_example/e_math_example.c: New file.
	* softcache/math_example/fast.ldf: New file.
	* softcache/math_example/fast_cacheman.ldf: New file.
	* softcache/math_example/math_example.c: New file.

2015-01-15  Ola Jeppsson  <ola@adapteva.com>

	* apps/hello-world/src/hello_world.c (int main): Attach to shm
	segment if it already exists, instead of failing

2015-01-15  Ola Jeppsson  <ola@adapteva.com>

	* apps/hello-world/src/hello_world.c (int main): Print to
	stdout instead of stderr.

2015-01-13  Ola Jeppsson  <ola@adapteva.com>

	* test/e-standby-test/src/e-standby-test.c (int main): Call
	e_reset_system().
	(int my_reset_system): Rename to my_config_system(). Update
	for new ESYS API. Let e_reset_system() handle reset.
	* test/e-standby-test/test.sh: Do not redirect stdout.

2015-01-13  Ola Jeppsson  <ola@adapteva.com>

	* apps/e-init/src/e-init.c (int main): Update for new ESYS API.
	* apps/e-init/test.sh: Do not redirect stdout.

2015-01-13  Ola Jeppsson  <ola@adapteva.com>

	* errata/noc_fifo/build.sh: Link with e-loader.

2015-01-13  Ola Jeppsson  <ola@adapteva.com>

	* apps/e-dump-mem/src/e-dump-mem.c (int main): Call
	e_reset_system().
	* apps/e-dump-regs/src/e-dump-regs.c (int main): Likewise.
	* io/link_lowpower_mode/src/link_lowpower_mode.c (int main):
	Likewise.
	* labs/clockgating_mode/src/clockgating_mode.c (int main):
	Likewise.
	* test/e-mem-test/src/e-mem-test.c (int main): Likewise.
	* test/e-regfile-test/src/e-regfile-test.c (int main):
	Likewise.
	* test/e-mem-test/src/e-mem-test.c (int my_reset_system):
	Remove.
	* test/e-regfile-test/src/e-regfile-test.c (int
	my_reset_system): Likewise.

2014-11-04  Ola Jeppsson  <ola@adapteva.com>

	* cpu/arithmode/test.sh: Fix path in test script.

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* scripts/build_and_test_all.sh: Fix segfault on exit in trap
	handler. Don't try to test examples when cross compiling.

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* Create 2014.11 branch

2014-10-31  Ola Jeppsson  <ola@adapteva.com>

	* apps/eprime/build.sh: Fix cross compilation
	* apps/fft2d/build.sh: Fix build failure caused by missing directory


2014-10-30  Ola Jeppsson  <ola@adapteva.com>
	* dma/dma_2d/test.sh:
	* dma/dma_interrupt/test.sh:
	* dma/dma_message_read/test.sh:
	* dma/dma_message_write/test.sh:
	* dma/dma_slave/test.sh:
	Fix path problems


2014-10-29  Ola Jeppsson  <ola@adapteva.com>
	* dma/dma_slave/src/e_dma_slave_test.c:
	* dma/dma_slave/src/e_dma_slave_test1.c:
	Reset DMA engines on init.
	* dma/dma_slave/src/dma_slave_test.c:
	Tell transmitter the coordinate of the receiver core before
	starting it
	* emesh/emesh_bandwidth_all2one/test.sh:
	Fix path problems.
	* apps/fft2d/host/Release/matprt.m:
	Don't track.


2014-10-22  Ola Jeppsson  <ola@adapteva.com>
	* Many 'test.sh' and a few 'run.sh':
	Return example's exit code
	* scripts/build_and_test_all.sh:
	Limit built examples to current working directory


2014-10-20  Ola Jeppsson  <ola@adapteva.com>
	* scripts/build_and_test_all.sh:
	Yet another build/test script. This one seems to find more
	examples to build than the others, but its test failure
	detection is probably worse.


2014-10-20  Ola Jeppsson  <ola@adapteva.com>
	* apps/shm_test/src/shm_test.c:
	* emesh/emesh_bandwidth_all2one/src/mesh_one.c:
	* emesh/emesh_traffic/src/mesh_traffic.c:
	* io/link_lowpower_mode/src/link_lowpower_mode.c:
	* test/e-main/src/e-main.c:
	* test/e-test/src/e-test.c:
	Minor changes. Make them compile.


2014-10-20  Ola Jeppsson  <ola@adapteva.com>
	* apps/dotproduct/run.sh:
	* apps/e-bandwidth-test/test.sh:
	* apps/e-dump-mem/test.sh:
	* apps/e-dump-regs/test.sh:
	* apps/e-fill-mem/test.sh:
	* apps/e-init/test.sh:
	* apps/e-mem-sync/test.sh:
	* apps/eprime/run.sh:
	* apps/erm/run.sh:
	* apps/erm_example/run.sh:
	* apps/fft2d/run.sh:
	* apps/fft2d/test.sh:
	* apps/hello-world/run.sh:
	* apps/matmul-16/run.sh:
	* apps/matmul-16/test.sh:
	* apps/matmul-64/run.sh:
	* apps/shm_test/run.sh:
	* apps/shm_test/test.sh:
	* archive/e-test/e-test:
	* cpu/arithmode/run.sh:
	* cpu/arithmode/test.sh:
	* cpu/assembly/run.sh:
	* cpu/basic_math/run.sh:
	* cpu/complex_numbers/run.sh:
	* cpu/ctimer/run.sh:
	* cpu/interrupt-demo/run.sh:
	* cpu/interrupts/run.sh:
	* cpu/mutex/run.sh:
	* cpu/nested_interrupts/run.sh:
	* cpu/register_test/run.sh:
	* cpu/remote_call/run.sh:
	* dma/dma_2d/run.sh:
	* dma/dma_2d/test.sh:
	* dma/dma_chain/run.sh:
	* dma/dma_chain/test.sh:
	* dma/dma_interrupt/run.sh:
	* dma/dma_interrupt/test.sh:
	* dma/dma_message_read/run.sh:
	* dma/dma_message_read/test.sh:
	* dma/dma_message_write/run.sh:
	* dma/dma_message_write/test.sh:
	* dma/dma_slave/run.sh:
	* dma/dma_slave/test.sh:
	* emesh/emesh_bandwidth_all2one/run.sh:
	* emesh/emesh_bandwidth_all2one/test.sh:
	* emesh/emesh_bandwidth_bisection/run.sh:
	* emesh/emesh_bandwidth_neighbour/run.sh:
	* emesh/emesh_read_latency/run.sh:
	* emesh/emesh_traffic/run.sh:
	* io/link_lowpower_mode/run.sh:
	* labs/clockgating_mode/run.sh:
	* labs/hardware_barrier/run.sh:
	* labs/hardware_loops/run.sh:
	* labs/mem_protect/run.sh:
	* test/e-loopback-test/test.sh:
	* test/e-main/run.sh:
	* test/e-main/test.sh:
	* test/e-matmul-test/test.sh:
	* test/e-mem-test/test.sh:
	* test/e-read-buf/test.sh:
	* test/e-read-word/test.sh:
	* test/e-regfile-test/test.sh:
	* test/e-reset/test.sh:
	* test/e-standby-test/test.sh:
	* test/e-test/e-test:
	* test/e-test/test.sh:
	* test/e-write-buf/test.sh:
	* test/e-write-word/test.sh:
	Don't run tests as super user (sudo).
	Remove unnecessary environment variables.


2014-10-16  Ben Chaco  <bchaco@x3-c.com>
	* cpu/arithmode/run.sh:
	* cpu/arithmode/test.sh:
	* dma/dma_message_read/test.sh:
	* dma/dma_message_write/test.sh:
	* dma/dma_slave/test.sh:
	* dma/dma_2d/test.sh:
	* dma/dma_chain/test.sh:
	* dma/dma_interrupt/test.sh:
	* scripts/DMA.E16:
	Initial import of test scripts for testing
	* dma/dma_message_read/src/dma_message_a.c (int main):
	* dma/dma_message_read/src/e_dma_message_a.c:
	Use SHM API rather than hardcoded shared DRAM address


2014-10-14  Ola Jeppsson  <ola@adapteva.com>
	* apps/e-dump-regs/src/e-dump-regs.c:
	* apps/eprime/build.sh:
	* apps/fft2d/build.sh:
	* apps/fft2d/host/src/fft2d_host.c:
	* apps/matmul-16/host/Debug/objects.mk:
	* apps/matmul-16/host/Release/objects.mk:
	* apps/matmul-64/host/Debug/objects.mk:
	* apps/matmul-64/host/Release/objects.mk:
	* archive/chip_testing/e_test/src/e_test.c:
	* archive/chip_testing/makefile:
	* archive/e-test/src/e-test.c:
	* cpu/ctimer/build.sh:
	* cpu/interrupts/src/interrupt_test.c:
	* cpu/nested_interrupts/src/interrupt_test.c:
	* dma/dma_chain/src/dma_chain_test.c:
	* test/e-main/bin/e_task.dump:
	* test/e-main/src/e-main.c:
	* test/e-mem-test/src/e-mem-test.c:
	* test/e-regfile-test/src/e-regfile-test.c:
	* test/e-standby-test/src/e-standby-test.c:
	* test/e-test/src/e-test.c:
	Minor build fixes against ESDK 2014.08rc

2014-08-07  Ben Chaco  <bchaco@x3-c.com>

	* apps/clear_shmtable/src/clear_shmtable.c:
	Added clear_shmtable app
	* apps/shm_test/build.sh:
	* apps/shm_test/src/e_shm_test.c:
	* apps/shm_test/src/shm_test.c:
	* apps/shm_test/test.sh:
	Updated shm_test to exercize the trace library. 
	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c:
	* test/e-main/src/e-main.c:
	* test/e-mem-test/src/e-mem-test.c:
	* test/e-test/src/e-test.c:
	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c:
	Added #include for e-loader.h which is no longer included from
	the epiphany-hal.h wrapper header.

2014-07-24  Ben Chaco  <bchaco@x3-c.com>

	* apps/clear_shmtable/build.sh:
	* apps/clear_shmtable/src/clear_shmtable.c:
	* apps/dotproduct/build.sh:
	* apps/e-bandwidth-test/build.sh:
	* apps/e-dump-mem/build.sh:
	* apps/e-dump-regs/build.sh:
	* apps/e-fill-mem/build.sh:
	* apps/e-init/build.sh:
	* apps/e-mem-sync/build.sh:
	* apps/e-toggle-led/build.sh:
	* apps/erm/build.sh:
	* apps/erm_example/build.sh:
	* apps/fft2d/build.sh:
	* apps/hello-world/build.sh:
	* apps/hello-world/src/e_hello_world.c:
	* apps/hello-world/src/hello_world.c:
	* apps/shm_test/build.sh:
	* apps/shm_test/src/e_shm_test.c:
	* apps/shm_test/src/shm_test.c:
	* archive/e-test/build.sh:
	* cpu/arithmode/build.sh:
	* cpu/assembly/build.sh:
	* cpu/basic_math/build.sh:
	* cpu/complex_numbers/build.sh:
	* cpu/ctimer/build.sh:
	* cpu/interrupt-demo/build.sh:
	* cpu/interrupts/build.sh:
	* cpu/mutex/build.sh:
	* cpu/nested_interrupts/build.sh:
	* cpu/register_test/build.sh:
	* cpu/remote_call/build.sh:
	* dma/dma_2d/build.sh:
	* dma/dma_chain/build.sh:
	* dma/dma_interrupt/build.sh:
	* dma/dma_message_read/build.sh:
	* dma/dma_message_write/build.sh:
	* dma/dma_slave/build.sh:
	* emesh/emesh_bandwidth_all2one/build.sh:
	* emesh/emesh_bandwidth_bisection/build.sh:
	* emesh/emesh_bandwidth_neighbour/build.sh:
	* emesh/emesh_read_latency/build.sh:
	* emesh/emesh_traffic/build.sh:
	* io/link_lowpower_mode/build.sh:
	* labs/clockgating_mode/build.sh:
	* labs/hardware_barrier/build.sh:
	* labs/hardware_loops/build.sh:
	* labs/mem_protect/build.sh:
	* scripts/LIST.E16:
	* scripts/build_all.sh:
	* test/e-extmem-test/build.sh:
	* test/e-main/build.sh:
	* test/e-matmul-test/build.sh:
	* test/e-mem-test/build.sh:
	* test/e-read-buf/build.sh:
	* test/e-read-word/build.sh:
	* test/e-regfile-test/build.sh:
	* test/e-reset/build.sh:
	* test/e-test/build.sh:
	* test/e-write-buf/build.sh:
	* test/e-write-word/build.sh:
	Updates for Epiphany Shared Memory API. Link libpthread. Changed
	ELIBS and EINCS in scripts to allow easilly adding new include or
	library paths. Added apps/shm_test and updated apps/hello-world to
	use the shared memory API.

2014-06-12  Ben Chaco  <bchaco@x3-c.com>

	* apps/dotproduct/build.sh:
	* apps/e-bandwidth-test/build.sh:
	* apps/e-dump-mem/build.sh:
	* apps/e-dump-regs/build.sh:
	* apps/e-fill-mem/build.sh:
	* apps/e-toggle-led/build.sh:
	* apps/erm_example/build.sh:
	* apps/hello-world/build.sh:
	* cpu/arithmode/build.sh:
	* cpu/assembly/build.sh:
	* cpu/basic_math/build.sh:
	* cpu/ctimer/build.sh:
	* cpu/interrupt-demo/build.sh:
	* cpu/interrupts/build.sh:
	* cpu/mutex/build.sh:
	* cpu/nested_interrupts/build.sh:
	* cpu/register_test/build.sh:
	* cpu/remote_call/build.sh:
	* dma/dma_2d/build.sh:
	* dma/dma_chain/build.sh:
	* dma/dma_interrupt/build.sh:
	* dma/dma_message_read/build.sh:
	* dma/dma_message_write/build.sh:
	* dma/dma_slave/build.sh:
	* emesh/emesh_bandwidth_all2one/build.sh:
	* emesh/emesh_bandwidth_all2one/test.sh:
	* emesh/emesh_bandwidth_bisection/build.sh:
	* emesh/emesh_bandwidth_neighbour/build.sh:
	* emesh/emesh_read_latency/build.sh:
	* emesh/emesh_traffic/build.sh:
	* io/link_lowpower_mode/build.sh:
	* labs/clockgating_mode/build.sh:
	* labs/hardware_barrier/build.sh:
	* labs/hardware_loops/build.sh:
	* labs/mem_protect/build.sh:
	* test/e-mem-test/build.sh:
	* test/e-main/build.sh:
	* test/e-read-buf/build.sh:
	* test/e-read-word/build.sh:
	* test/e-regfile-test/build.sh:
	* test/e-reset/build.sh:
	* test/e-test/build.sh:
	* test/e-write-buf/build.sh:
	* test/e-write-word/build.sh:
	Uncommented the linking of libe-loader.so
	* apps/e-bandwidth-test/src/e-bandwidth-test-host.c:
	Check return values from e-hal function calls
	* apps/e-bandwidth-test/test.sh:
	* apps/e-dump-mem/test.sh:
	* apps/e-dump-regs/test.sh:
	* apps/e-fill-mem/test.sh:
	* apps/e-init/test.sh:
	* apps/e-mem-sync/test.sh:
	* apps/erm/src/main.c:
	* apps/fft2d/test.sh:
	* apps/matmul-16/test.sh:
	* scripts/build_all.sh:
	* test/e-main/test.sh:
	* test/e-matmul-test/test.sh:
	* test/e-mem-test/test.sh:
	* test/e-read-buf/test.sh:
	* test/e-read-word/test.sh:
	* test/e-regfile-test/test.sh:
	* test/e-reset/test.sh:
	* test/e-test/test.sh:
	* test/e-write-buf/test.sh:
	* test/e-write-word/test.sh:
	Removed execution with root privs (sudo)

2014-06-05  Ben Chaco  <bchaco@x3-c.com>

	* scripts/LIST.E16:
 	Updated paths so that they are relative to the epiphany-examples root
	* scripts/TestEpiphany.pl:
	Changed env var from EPIPHANY_TEST_HOME to EPIPHANY_TESTS


2014-05-23  Ben Chaco  <bchaco@x3-c.com>

	* scripts/LIST:
	Updated paths so that they are relative to the epiphany-examples root
	* scripts/TestEpiphany.pl:
	Fixed Usage -d option is required. Test path prefix comes from EPIPHANY_TEST_HOME env var.
	* jenkins:
	* jenkins/setup.sh:
	Added jenkins directory for configuring Epiphany Tests as a nightly Jenkins project
	* README.md:
	Updated to describe how to run the TestEpiphany.pl test harness script
